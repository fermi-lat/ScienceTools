name: Build and upload conda packages

on:
  push:
    branches: vendor_externals
jobs:
  conda_deployment:
    name: Conda deployment
    runs-on: ${{ matrix.os }}
    defaults:
     run:
        shell: bash -el {0}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-24.04-arm
            arch: arm64
            env_target_file: "fermitools-develop-linux.yml"
          - os: ubuntu-24.04
            arch: x86
            env_target_file: "fermitools-develop-linux.yml"
          - os: macos-15
            arch: x86_64 
            env_target_file: "fermitools-develop-osx-x86.yml"
            packages: llvm cfitsio swig
          - os: macos-15 # arm64
            arch: arm64
            env_target_file: "fermitools-develop-osx-arm64.yml"
            packages: llvm cfitsio swig
    steps:
      - name: checkout the code
        uses: actions/checkout@v4 # Checkout the repository code
        with:
          ref: vendor_externals
          submodules: 'recursive' # true
          fetch-depth: 0 # Fetches full history
          
      - name: pull branched submodules
        run: |
          git submodule foreach 'git checkout vendor_externals ||:'
          git submodule foreach 'git pull origin vendor_externals ||:'
        
      - name: Conda environment creation and activation
        uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: 3.11
          environment-file: environments/${{matrix.env_target_file}}    # Replace with the path to your conda environment
          auto-update-conda: false
          auto-activate-base: false
          show-channel-urls: true

      - name: Set environment-specific variables
        run: |
          if [[ "${{ matrix.os }}" == "macos-15" && "${{ matrix.arch }}" == "x86_64" ]]; then
            echo "Setting MacOS x86 env var" # debug
            echo "MACOS_ARCH=x86" >> "$GITHUB_ENV"
          fi

      - name: Increment version number
        run: |
          source ${{ github.workspace }}/recipe/increment_fermi_version.sh
          echo "FERMITOOLS_VERSION=$FERMITOOLS_VERSION" >> "$GITHUB_ENV"
        
      #- name: Build and upload the conda packages
      #  uses: uibcdf/action-build-and-upload-conda-packages@main
      #  with:
      #    meta_yaml_dir: recipe # Replace with the path to your meta.yaml directory
      #    user: fermi # Replace with your Anaconda username (or an Anaconda organization username)
      #    token: ${{ secrets.ANACONDA_TOKEN }} # Replace with the name of your Anaconda Token secret
      #    label: dev
      #    upload: true

      - name: Build the conda package
        id: packages-compilation
        working-directory: recipe
        run: |
          out_dir=`mktemp -d -t compilation-XXXXXXXXXX`
          echo "out_dir=$out_dir" >> $GITHUB_OUTPUT
          conda_build_command="conda build . --no-anaconda-upload --output-folder $out_dir"
          echo "$conda_build_command"
          eval "$conda_build_command"
          echo "HOST_PACKAGE=$HOST_PACKAGE" >> $GITHUB_OUTPUT

      - name: Package Upload
        run: |
          export ANACONDA_API_TOKEN=${{ secrets.ANACONDA_TOKEN }}
          package_paths=$(find ${{ steps.packages-compilation.outputs.out_dir }} -type f -name $(basename ${{ steps.packages-compilation.outputs }})
          for package_path in $package_paths; do
            command="anaconda upload --user fermi --label dev $package_path"
            echo "$command"
            eval "$command"
            paths+=($package_path)
          done
          echo "paths=${paths[@]}" >

          


name: Build Conda 
on:
  workflow_call:
    inputs:
      build-type:
        description: The build type or configuration, such as 'Debug' or 'Release'
        required: true
        type: string
      os:
        description: The runner for the workflow
        required: true
        type: string
      build-arch:
        description: Architecture to build(x86, x86_64, or arm64)
        required: true
        type: string
      build-packages:
        description: List of packages needed (OSX specific)
        required: false
        type: string
      build-env-target:
        description: OS speicifc yaml file found under environments/fermitools-*
        required: true
        type: string

jobs:
  build:
    name: ${{inputs.os}}, ${{inputs.build-arch}},  ${{inputs.build-type}}, ${{inputs.container}}
    runs-on: ${{inputs.os}}
    container: ${{inputs.container}}
    defaults:
      run:
        shell: bash -el {0}
    env:
      # Normally I would use --parallel $(nproc), but that doesn't fly on
      # Windows. GH-hosted runners have 3 or 4 CPUs, so just go with 3.
      NPROC: 3
    steps:
    
      - name: Run environment-specific commands
        run: |
          if [[ "${{ inputs.os }}" == "macos-"* && "${{ inputs.build-arch }}" == "x86_64" ]]; then
            echo "Setting MacOS x86 env var" # debug
            echo "MACOS_ARCH=x86" >> "$GITHUB_ENV"
          fi
          if [[ "${{ matrix.os }}" == "ubuntu-"* && "${{ matrix.arch }}" == "x86" ]]; then
            # if: ${{ startsWith(matrix.os, 'ubuntu-') && matrix.arch == 'x86' }}
            #if [[ ${{ startsWith(matrix.os, 'ubuntu-') && matrix.arch == 'x86' }} ]] ; then :
            yum -y install git jq python3
            git config --global --add safe.directory /__w/ScienceTools/ScienceTools
          fi
          
      - name: checkout the code
        uses: actions/checkout@v4
        with:
          ref: master
          submodules: 'recursive' 
          fetch-depth: 0 # Fetches full history

      - name: Conda environment creation and activation
        uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: 3.11
          environment-file: environments/${{inputs.build-env-target}}
          auto-update-conda: false
          auto-activate-base: false
          show-channel-urls: true

      - name: Increment version number
        run: |
          source ${{ github.workspace }}/recipe/increment_fermi_version.sh
          echo "FERMITOOLS_VERSION=$FERMITOOLS_VERSION" >> "$GITHUB_ENV"

      - name: Build and upload the conda packages
        uses: uibcdf/action-build-and-upload-conda-packages@main
        with:
          meta_yaml_dir: recipe # Replace with the path to your meta.yaml directory
          user: fermi # Anaconda username (or an Anaconda organization username)
          token: ${{ secrets.ANACONDA_TOKEN }} 
          label: branch
          upload: true

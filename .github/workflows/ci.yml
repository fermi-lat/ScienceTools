name: CMake Build arm64 and amd64 for OSX / Linux
on:
  push:
    branches: [ 'testing_gha' ] # Enter trigger branch here
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'

env:
      ACTIONS_STEP_DEBUG: true

jobs:
  docker:
    runs-on: ${{ matrix.os }}
    defaults:
     run:
        shell: bash -el {0}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-24.04-arm
            arch: arm64
            env_target_file: "fermitools-develop-linux.yml"
          - os: ubuntu-24.04
            arch: x86
            env_target_file: "fermitools-develop-linux.yml"
          - os: macos-13 # macos-13
            arch: x86_64 
            env_target_file: "fermitools-develop-osx-x86.yml"
            packages: llvm cfitsio swig
          - os: macos-15 # arm64
            arch: arm64
            env_target_file: "fermitools-develop-osx-arm64.yml"
            packages: llvm cfitsio swig
            
    steps:
    - name: checkout the code
      uses: actions/checkout@v4 # Checkout the repository code
      with:
        ref: testing_gha # Add ref branch here
        submodules: 'recursive' # true
        fetch-depth: 0 # Fetches full history

    - name: Set ENV_TARGET_FILE variable
      run: echo "ENV_TARGET_FILE=${{matrix.env_target_file}}" >> "$GITHUB_ENV"

    - name: Get miniforge
      uses: mamba-org/setup-micromamba@v2
      with:
        environment-file: "environments/${{env.ENV_TARGET_FILE}}"
        environment-name: fermi-dev
        
    - name: Set environment-specific variables
      run: |
        if [[ "${{ matrix.os }}" == "macos-"* && "${{ matrix.arch }}" == "x86_64" ]]; then
          echo "Setting MacOS x86 env var" # debug
          echo "MACOS_ARCH=x86" >> "$GITHUB_ENV"
        fi
          
    - name: Configure CMake  ${{matrix.os}}:${{ matrix.arch }}
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
          echo "Configuring for Linux"
          echo "Current Git Ref: ${{ github.ref }}"
          cmake -DCMAKE_BUILD_TYPE=Release -S . -B Release -DCMAKE_C_COMPILER="$(which gcc)" -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_VERBOSE_MAKEFILE=ON  -DCMAKE_INSTALL_PREFIX="$CONDA_PREFIX" -DCMAKE_PREFIX_PATH="$CONDA_PREFIX"
        elif [ "$RUNNER_OS" == "macOS" ]; then
          echo "Brew install dependencies"
          brew install ${{ matrix.packages }} 
          echo "Configuring for macOS"
          echo "Current Git Ref: ${{ github.ref }}"
          cmake -DCMAKE_BUILD_TYPE=Release -S . -B Release -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_TOOLCHAIN_FILE=cmake/macos-toolchain.cmake DCMAKE_VERBOSE_MAKEFILE=ON  -DCMAKE_INSTALL_PREFIX="$CONDA_PREFIX" -DCMAKE_PREFIX_PATH="$CONDA_PREFIX "
        fi
  
    - name: Build Project
      run: |
        echo "Current Git Ref: ${{ github.ref }}"
        cmake --build Release --target=install --verbose


name: CMake Build
on:
  push:
    branches: [ 'addition_creator_fits' ]
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'

jobs:
  docker:
    runs-on: ubuntu-latest # Or windows-latest, macos-latest
    defaults:
     run:
        shell: bash -el {0}
    steps:
    - name: checkout the code
      uses: actions/checkout@v4 # Checkout the repository code
      with:
        ref: addition_creator_fits
        submodules: 'recursive' # true
        fetch-depth: 0 # Fetches full history

    - name: Verify proper  submodule branches were checked out
      run: |
       git submodule status --recursive | awk '{ print $2 }' | while read -r submodule_path; do
        echo "Submodule: $submodule_path"
        pushd "$submodule_path" > /dev/null

        # Get the currently checked out branch (if any)
        branch=$(git rev-parse --abbrev-ref HEAD)
        if [ "$branch" == "HEAD" ]; then
           # If HEAD is detached, get the commit SHA
           echo "  - Detached HEAD at commit: $(git rev-parse HEAD)"
        else
           echo "  - Branch: $branch"
           echo "  - Commit: $(git rev-parse HEAD)"
        fi
        popd > /dev/null
       done

    - name: Get miniforge
      uses: mamba-org/setup-micromamba@v2
      with:
        environment-file: environments/fermitools-develop-linux.yml
        environment-name: fermi-dev
        ## init-shell: bash
        ## cache-environment: true
        post-cleanup: 'all'

    - name: Install CMake and Build Tools
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake cmake-data dh-elpa-helper libjsoncpp25 librhash0 build-essential curl # For Ubuntu/Debian
        

    - name: Configure CMake
      run: |
        echo "Current Git Ref: ${{ github.ref }}"
        cmake -S . -B RelWithDebInfo -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_VERBOSE_MAKEFILE=ON  -DCMAKE_INSTALL_PREFIX="$CONDA_PREFIX" -DCMAKE_PREFIX_PATH="$CONDA_PREFIX"

    - name: Build Project
      run: |
        echo "Current Git Ref: ${{ github.ref }}"
        cmake --build RelWithDebInfo --target=install

name: Build the Conda package
on:
  workflow_call:
    inputs:
      matrix_json:
        required: true
        type: string
        description: "JSON string representing the matrix"
    outputs:
      pkg_ver:
        description: "The Fermitools conda package version"
        value: ${{ jobs.build-conda.outputs.fermitools-pkg }}

jobs:
  build-conda:
    # ${{matrix.build-type}}
    name: ${{matrix.os}}, ${{matrix.arch}}, ${{matrix.container}}
    runs-on: ${{ matrix.os }}
    container: ${{matrix.container}}
    outputs:
      fermitools-pkg: ${{env.FERMITOOLS_VERSION }}
    strategy:
      matrix: ${{ fromJson(inputs.matrix_json) }}
    steps:
      - name: Run environment-specific commands
        id: get_git_safe_dir
        run: |
          if [[ "${{ matrix.os }}" =~ "macos-" && "${{ matrix.arch }}" == "x86_64" ]]; then
            echo "Setting MacOS x86 env var" # debug
            echo "MACOS_ARCH=x86" >> "$GITHUB_ENV"
          fi
          if [[ "${{ matrix.os }}" =~ "ubuntu-" && "${{ matrix.arch }}" == "x86" ]]; then
            yum -y install git jq python3
            git config --global --add safe.directory /__w/ScienceTools/ScienceTools
            GIT_SAFE_DIRECTORY=$(git config --global --get safe.directory)
            echo "The global Git safe is: $GIT_SAFE_DIRECTORY"
            echo "git_safe_dir=$GIT_SAFE_DIRECTORY" >> "$GITHUB_OUTPUT"
          fi

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }} # reset_checkout_fixes checkout_fixes  master
          submodules: 'recursive' # true
        #  fetch-depth: 0 # Fetches full history

      - name: Conda environment creation and activation
        uses: conda-incubator/setup-miniconda@v3
        with:
          conda-remove-defaults: true
          python-version: 3.11
          environment-file: environments/${{matrix.env_target_file}}    # environments/fermitools-develop-osx.yml or fermitools-develop-linux.yml
          auto-update-conda: false
          auto-activate-base: false
          show-channel-urls: true

      - name: Increment version number
        run: |
          if [[ "${{ steps.get_git_safe_dir.outputs.git_safe_dir }}" != ""  ]]; then
            echo "github.safe.directory exists"
            source ${{ steps.get_git_safe_dir.outputs.git_safe_dir }}/recipe/increment_fermi_version.sh
          else
            echo "github.xyz does not exist"
            source ${{ github.workspace }}/recipe/increment_fermi_version.sh

          fi 
          # source ${{ github.workspace }}/recipe/increment_fermi_version.sh
          echo "FERMITOOLS_VERSION=$FERMITOOLS_VERSION" >> "$GITHUB_ENV"


      # Reused from Azure build system.
      - name: Increment version number
        run: |
          source ${{ github.workspace }}/recipe/increment_fermi_version.sh
          echo "FERMITOOLS_VERSION=$FERMITOOLS_VERSION" >> "$GITHUB_ENV"
          # echo "BRANCH name  ${{ github.ref_name }}"

  # Bug: Package need to be uploaded for the conda package name to be accessible by other jobs. Bug in action code.
  # Bug: Currently only handles dev label, need to handle rc and main tags too.
 
      - name: Build and upload the conda packages
        id: conda-build-and-upload
        uses: uibcdf/action-build-and-upload-conda-packages@main
        with:
          meta_yaml_dir: recipe # It's using recipe/meta.yaml for building the package. 
          user: fermi # Replace with your Anaconda username (or an Anaconda organization username)
          token: ${{ secrets.ANACONDA_TOKEN }} # Setup under the GITHUB Settings 
          label: dev
          overwrite: true # Do not abort the uploading if a package with the same name is already present in the Anaconda channel.
          # upload_flags: "--force"
          upload: true # Need to keep upload , or else paths don't work.
        continue-on-error: true # Important: Allow the workflow to continue even if tests fail


  # Keep this code in if pivoting to using artifacts became an option. Monthly github storage quota would also be a concern since 
  # conda packages are 150 mb or more for each build.
      # - name: Upload Conda package as artifact
      #  uses: actions/upload-artifact@v4
      #  with:
      #    name: "${{ matrix.os }}-fermitools-package"
      #    path: ${{env.conda-pkg-path}}

  # Waits till all the builds complete, before running testing.
  # The "needs" keyword forces all of the build runners to complete before any testing can be run.
  # Longest build is the macos x86: Currently takes 90 minutes to complete (Non Docker version)
  # TODO: Use the Docker build process for macos x86 to support S3DF's machines. 

  run-python-tests:
    needs: build-conda 
    strategy:
      matrix: ${{ fromJson(inputs.matrix_json) }} 
    # if: success()
    uses: ./.github/workflows/python-test.yml
    with:
      matrix_os: ${{ matrix.os }}
      fermitools_pkg_ver: ${{needs.build-conda.outputs.fermitools-pkg}}

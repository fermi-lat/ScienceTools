name: Build the Conda package
on:
  workflow_call:
    inputs:
      matrix_json:
        required: true
        type: string
        description: "JSON string representing the matrix"
    outputs:
      conda-pkg:
        description: "Full path location of the Fermitools conda package"
        value: ${{ jobs.build-conda.outputs.fermitools-pkg }}

jobs:
  build-conda:
    runs-on: ${{ matrix.os }}
    outputs:
      fermitools-pkg: ${{ steps.conda-build-and-upload.outputs.conda_package_name  }}
    strategy:
      matrix: ${{ fromJson(inputs.matrix_json) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: checkout_fixes # master
          submodules: 'recursive' # true
          fetch-depth: 0 # Fetches full history

      - name: Conda environment creation and activation
        uses: conda-incubator/setup-miniconda@v3
        with:
          conda-remove-defaults: true
          python-version: 3.11
          environment-file: environments/${{matrix.env_target_file}}    # Replace with the path to your conda environment
          auto-update-conda: false
          auto-activate-base: false
          show-channel-urls: true

      - name: Set OSX environment-specific variables
        run: |
          if [[ "${{ matrix.os }}" == "macos-"* && "${{ matrix.arch }}" == "x86_64" ]]; then
            echo "Setting MacOS x86 env var" # debug
            echo "MACOS_ARCH=x86" >> "$GITHUB_ENV"
          fi

      - name: Increment version number
        run: |
          source ${{ github.workspace }}/recipe/increment_fermi_version.sh
          echo "FERMITOOLS_VERSION=$FERMITOOLS_VERSION" >> "$GITHUB_ENV"

      - name: Build and upload the conda packages
        id: conda-build-and-upload
        uses: uibcdf/action-build-and-upload-conda-packages@main
        with:
          meta_yaml_dir: recipe # Replace with the path to your meta.yaml directory
          user: fermi # Replace with your Anaconda username (or an Anaconda organization username)
          token: ${{ secrets.ANACONDA_TOKEN }} # Replace with the name of your Anaconda Token secret
          label: dev
          upload: false 
        continue-on-error: true # Important: Allow the workflow to continue even if tests fail

      - name: Re-format output paths
        if: always() # This ensures the step runs even if the tests fail
        id: conda-pkg-fullpath
        run: |
            paths=$(tr ' ' '\n' <<< "${{steps.conda-build-and-upload.outputs.paths}}")
            echo "Conda pkg $paths"
            echo "result=$paths" >> "$GITHUB_OUTPUT"
            echo "conda-pkg-path=$paths" >> "$GITHUB_ENV"

      - name: verify-conda-package
        if: always() # This ensures the step runs even if the tests fail
        id: verify-pkg-conda
        run: |
            echo "Step ${{ steps.conda-build-and-upload.outputs.conda_package_name }} "
            echo "Env ${{env.conda-pkg-path}} "
 
  run-python-tests:
    needs: build-conda 
    uses: ./.github/workflows/python-test.yml # Call the reusable test workflow
    with:
      matrix_json: ${{ inputs.matrix_json  }}
      fermitools_pkg: ${{needs.build-conda.outputs.fermitools-pkg}} 
      # ${{needs.conda-pkg-fullpath.outputs.paths}}
      # ${{steps.conda-pkg-fullpath.outputs.paths}}
      # Not allowed here env fermitools_pkg: ${{env.conda-pkg-path}}
      # ${{needs.build-conda.outputs.fermitools-pkg}}
      # ${{ needs.build-conda.outputs.fermitools-pkg }}
      # job.build-conda.outputs.fermitools-pkg }}
      # jobs.build-conda.conda-build-and-upload.outputs.paths}}
      # steps.build-conda.outputs.fermitools-pkg }}

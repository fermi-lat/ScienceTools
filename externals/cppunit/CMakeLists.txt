# ====================================================================== #
# CppUnit â€“ LibreOffice fork (autotools), static-only                    #
# ====================================================================== #

cmake_minimum_required(VERSION 3.14)
cmake_policy(SET CMP0120 NEW)
set(CMAKE_POLICY_VERSION_MINIMUM 3.10)

include(CheckIncludeFile)
include(CheckSymbolExists)
include(CheckIncludeFileCXX)

message(STATUS "Local External Dependency CppUnit")

set(CPPUNIT_SRC_DIR ${CMAKE_CURRENT_LIST_DIR}/cppunit)

set(_macros
  CPPUNIT_HAVE_UNISTD_H   "unistd.h"
  CPPUNIT_HAVE_SYS_TIME_H "sys/time.h"
  CPPUNIT_HAVE_STDINT_H   "stdint.h"
  CPPUNIT_HAVE_DLFCN_H    "dlfcn.h"
)

while(_cppunit_macro_headers)
  list(POP_FRONT _cppunit_macro_headers _sym)   # macro name
  list(POP_FRONT _cppunit_macro_headers _hdr)   # header file
  check_include_file("${_hdr}" ${_sym})
endwhile()

check_symbol_exists(dlopen   "dlfcn.h"  CPPUNIT_HAVE_DLOPEN)
check_include_file_cxx("sstream"        CPPUNIT_HAVE_SSTREAM)
check_include_file_cxx("strstream"      CPPUNIT_HAVE_STRSTREAM)
check_include_file_cxx("cmath"          CPPUNIT_HAVE_CMATH)

set(_cfg "${CMAKE_CURRENT_BINARY_DIR}/cppunit/config-auto.h")

file(WRITE ${_cfg} "/* Auto-generated by CMake.  Do not edit. */\n#pragma once\n\n")

# generate 0/1 definitions
foreach(sym
        CPPUNIT_HAVE_UNISTD_H
        CPPUNIT_HAVE_SYS_TIME_H
        CPPUNIT_HAVE_STDINT_H
        CPPUNIT_HAVE_DLFCN_H
        CPPUNIT_HAVE_DLOPEN
        CPPUNIT_HAVE_SSTREAM
        CPPUNIT_HAVE_STRSTREAM
        CPPUNIT_HAVE_CMATH)
  if(${sym})
    file(APPEND ${_cfg} "#define ${sym} 1\n")
  else()
    file(APPEND ${_cfg} "#define ${sym} 0\n")
  endif()
endforeach()

# Always true on modern toolchains
file(APPEND ${_cfg} "\n#define CPPUNIT_HAVE_STD 1\n")
file(APPEND ${_cfg} "#define CPPUNIT_HAVE_NAMESPACES 1\n")

file(GLOB_RECURSE CPPUNIT_SOURCES CONFIGURE_DEPENDS
     "${CPPUNIT_SRC_DIR}/src/cppunit/*.cpp")

if(NOT WIN32)
  list(FILTER CPPUNIT_SOURCES EXCLUDE REGEX ".*/DllMain\\.cpp$")
endif()

add_library(cppunit_static STATIC ${CPPUNIT_SOURCES})
set_target_properties(cppunit_static PROPERTIES
    POSITION_INDEPENDENT_CODE TRUE
    OUTPUT_NAME cppunit)

target_include_directories(cppunit_static
PUBLIC "${CMAKE_CURRENT_BINARY_DIR}"
    "${CPPUNIT_SRC_DIR}/include"
    "${CPPUNIT_SRC_DIR}/src"
)
add_library(CppUnit::CppUnit ALIAS cppunit_static)

